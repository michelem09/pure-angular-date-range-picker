{"version":3,"names":[],"mappings":"","sources":["scripts/ob-daterangepicker.js"],"sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\tmodule.exports = __webpack_require__(8);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* global moment:false */\n\n\t'use strict';\n\n\tvar _providersDateRangePickerProviderJs = __webpack_require__(2);\n\n\tvar _providersDatePickerProviderJs = __webpack_require__(3);\n\n\tvar _directivesDateRangePickerDateRangePickerDirective = __webpack_require__(4);\n\n\tvar _directivesCalendarCalendarDirective = __webpack_require__(5);\n\n\tvar _directivesObDateRangePickerObDateRangePickerDirectiveJs = __webpack_require__(6);\n\n\tvar _directivesObDayPickerObDayPickerDirective = __webpack_require__(7);\n\n\tangular.module('obDateRangePicker', []).constant('moment', moment).provider('dateRangePickerConf', _providersDateRangePickerProviderJs.DateRangePickerProvider).provider('datePickerConf', _providersDatePickerProviderJs.DatePickerProvider).directive('dateRangePicker', _directivesDateRangePickerDateRangePickerDirective.DateRangePicker).directive('obDaterangepicker', _directivesObDateRangePickerObDateRangePickerDirectiveJs.ObDateRangePicker).directive('calendar', _directivesCalendarCalendarDirective.Calendar).directive('obDaypicker', _directivesObDayPickerObDayPickerDirective.ObDayPicker);\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.DateRangePickerProvider = DateRangePickerProvider;\n\n\tfunction DateRangePickerProvider() {\n\t  var config = {};\n\n\t  return {\n\t    setConfig: function setConfig(userConfig) {\n\t      config = userConfig;\n\t    },\n\t    $get: function $get() {\n\t      return config;\n\t    }\n\t  };\n\t}\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.DatePickerProvider = DatePickerProvider;\n\n\tfunction DatePickerProvider() {\n\t  var config = {};\n\n\t  return {\n\t    setConfig: function setConfig(userConfig) {\n\t      config = userConfig;\n\t    },\n\t    $get: function $get() {\n\t      return config;\n\t    }\n\t  };\n\t}\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\texports.DateRangePicker = DateRangePicker;\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n\tfunction DateRangePicker() {\n\t  'ngInject';\n\n\t  var directive = {\n\t    restrict: 'E',\n\t    scope: {\n\t      weekStart: '&',\n\t      range: '=?',\n\t      minDay: '&',\n\t      maxDay: '&',\n\t      api: '&',\n\t      monthFormat: '&',\n\t      inputFormat: '&',\n\t      weekDaysName: '&',\n\t      linkedCalendars: '&',\n\t      interceptors: '&'\n\t    },\n\t    templateUrl: 'app/directives/date-range-picker/date-range-picker.html',\n\t    controller: DateRangePickerController,\n\t    controllerAs: 'picker',\n\t    bindToController: true\n\t  };\n\n\t  return directive;\n\t}\n\n\tvar DateRangePickerController = (function () {\n\t  DateRangePickerController.$inject = [\"moment\", \"$scope\"];\n\t  function DateRangePickerController(moment, $scope) {\n\t    'ngInject';\n\n\t    _classCallCheck(this, DateRangePickerController);\n\n\t    this.Moment = moment;\n\t    this.Scope = $scope;\n\n\t    this.range = this.range || {};\n\t    this.setConfigurations();\n\t    this.startCalendarApi = {};\n\t    this.endCalendarApi = {};\n\t    this.setInterceptors();\n\t    this.setListeners();\n\t    this.setApi();\n\t    this.watchRangeChange();\n\t    this.interceptors = this.interceptors() || {};\n\t  }\n\n\t  _createClass(DateRangePickerController, [{\n\t    key: 'setApi',\n\t    value: function setApi() {\n\t      var _this = this;\n\n\t      var api = this.api() || {};\n\t      _extends(api, {\n\t        setCalendarPosition: function setCalendarPosition(start, end) {\n\t          _this.startCalendar = start;\n\t          if (_this.linkedCalendars() || start.isSame(end, 'M')) {\n\t            _this.endCalendar = _this.startCalendar.clone().add(1, 'M');\n\t          } else {\n\t            _this.endCalendar = end;\n\t          }\n\t        },\n\t        render: function render() {\n\t          _this.startCalendarApi.render();\n\t          _this.endCalendarApi.render();\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setListeners',\n\t    value: function setListeners() {\n\t      var _this2 = this;\n\n\t      this.Scope.$watchGroup([function () {\n\t        return _this2.range.start;\n\t      }, function () {\n\t        return _this2.range.end;\n\t      }], function (newRange) {\n\t        if (newRange[0] && newRange[1]) {\n\t          _this2.setConfigurations();\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setConfigurations',\n\t    value: function setConfigurations() {\n\t      var start = undefined,\n\t          end = undefined;\n\t      if (this.isMomentRange(this.range)) {\n\t        start = this.range.start;\n\t        end = this.range.end;\n\t      } else {\n\t        start = this.Moment(this.range.start, this.getFormat());\n\t        end = this.Moment(this.range.end, this.getFormat());\n\t      }\n\n\t      end = end.diff(start) >= 0 ? end : start.clone();\n\t      this.rangeStart = start;\n\t      this.rangeEnd = end;\n\t      this.daysSelected = 2;\n\t      this.updateRange();\n\t    }\n\t  }, {\n\t    key: 'updateRange',\n\t    value: function updateRange() {\n\t      if (this.isMomentRange(this.range)) {\n\t        this.range.start = this.rangeStart;\n\t        this.range.end = this.rangeEnd;\n\t      } else {\n\t        this.range.start = this.rangeStart ? this.rangeStart.format(this.getFormat()) : null;\n\t        this.range.end = this.rangeEnd ? this.rangeEnd.format(this.getFormat()) : null;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setInterceptors',\n\t    value: function setInterceptors() {\n\t      var _this3 = this;\n\n\t      this.startCalendarInterceptors = {\n\t        moveToPrevClicked: function moveToPrevClicked() {\n\t          _this3.moveCalenders(-1, 'start');\n\t        },\n\t        moveToNextClicked: function moveToNextClicked() {\n\t          _this3.moveCalenders(1, 'start');\n\t        },\n\t        daySelected: function daySelected(day) {\n\t          _this3.dayInStartSelected(day);\n\t          _this3.daySelected(day);\n\t          if (_this3.daysSelected == 2) {\n\t            _this3.interceptors.rangeSelectedByClick && _this3.interceptors.rangeSelectedByClick();\n\t          }\n\t        },\n\t        inputSelected: function inputSelected(day) {\n\t          _this3.inputInStartSelected(day);\n\t        }\n\t      };\n\n\t      this.endCalendarInterceptors = {\n\t        moveToPrevClicked: function moveToPrevClicked() {\n\t          _this3.moveCalenders(-1, 'end');\n\t        },\n\t        moveToNextClicked: function moveToNextClicked() {\n\t          _this3.moveCalenders(1, 'end');\n\t        },\n\t        daySelected: function daySelected(day) {\n\t          _this3.dayInEndSelected(day);\n\t          _this3.daySelected(day);\n\t          if (_this3.daysSelected == 2) {\n\t            _this3.interceptors.rangeSelectedByClick && _this3.interceptors.rangeSelectedByClick();\n\t          }\n\t        },\n\t        inputSelected: function inputSelected(day) {\n\t          _this3.inputInEndSelected(day);\n\t        }\n\t      };\n\t    }\n\t  }, {\n\t    key: 'inputInStartSelected',\n\t    value: function inputInStartSelected(day) {\n\t      switch (this.daysSelected) {\n\t        case 0:\n\t        case 1:\n\t          this.rangeStart = day;\n\t          this.daysSelected = 1;\n\t          break;\n\t        case 2:\n\t          if (day.diff(this.rangeStart, 'days') < 0) {\n\t            this.rangeStart = day;\n\t          } else if (day.isBetween(this.rangeStart, this.rangeEnd)) {\n\t            this.rangeStart = day;\n\t          } else if (day.diff(this.rangeEnd, 'days') >= 0) {\n\t            this.rangeStart = day;\n\t            this.rangeEnd = day;\n\t          }\n\t          this.daysSelected = 2;\n\t          this.updateRange();\n\t          break;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'inputInEndSelected',\n\t    value: function inputInEndSelected(day) {\n\t      switch (this.daysSelected) {\n\t        case 0:\n\t          this.rangeStart = day;\n\t          this.daysSelected = 1;\n\t          break;\n\t        case 1:\n\t        case 2:\n\t          if (day.diff(this.rangeStart, 'days') <= 0) {\n\t            this.rangeStart = day;\n\t            this.rangeEnd = day;\n\t          } else if (day.isSame(this.startCalendar, 'months') || day.isSame(this.endCalendar, 'months')) {\n\t            this.rangeEnd = day;\n\t          } else if (!day.isSame(this.endCalendar, 'months')) {\n\t            this.rangeEnd = day;\n\t          }\n\n\t          this.daysSelected = 2;\n\t          this.updateRange();\n\t          break;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'dayInStartSelected',\n\t    value: function dayInStartSelected(day) {\n\t      var nextMonth = this.startCalendar.clone().add(1, 'M');\n\n\t      if (day.isSame(nextMonth, 'month')) {\n\t        this.dayInEndSelected(day);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'dayInEndSelected',\n\t    value: function dayInEndSelected(day) {\n\t      var prevMonth = this.endCalendar.clone().subtract(1, 'M');\n\n\t      if (day.isSame(prevMonth, 'month')) {\n\t        this.dayInStartSelected(day);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'daySelected',\n\t    value: function daySelected(day) {\n\t      switch (this.daysSelected) {\n\t        case 0:\n\t          this.rangeStart = day;\n\t          this.daysSelected = 1;\n\t          break;\n\t        case 1:\n\t          if (day.diff(this.rangeStart, 'days') < 0) {\n\t            this.rangeStart = day;\n\t          } else {\n\t            this.rangeEnd = day;\n\t            this.daysSelected = 2;\n\t            this.updateRange();\n\t          }\n\t          break;\n\t        case 2:\n\t          this.daysSelected = 1;\n\t          this.rangeStart = day;\n\t          this.rangeEnd = null;\n\t          break;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'moveCalenders',\n\t    value: function moveCalenders(month, calendar) {\n\t      if (this.areCalendarsLinked()) {\n\t        this.startCalendar = this.startCalendar.clone().add(month, 'M');\n\t        this.endCalendar = this.endCalendar.clone().add(month, 'M');\n\t      } else {\n\t        if (calendar === 'start') {\n\t          this.startCalendar = this.startCalendar.clone().add(month, 'M');\n\t        } else {\n\t          this.endCalendar = this.endCalendar.clone().add(month, 'M');\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'isMomentRange',\n\t    value: function isMomentRange(range) {\n\t      var isRange = false;\n\t      if (range && range.start && range.end) {\n\t        isRange = this.Moment.isMoment(this.range.start) && this.Moment.isMoment(this.range.end);\n\t      }\n\n\t      return isRange;\n\t    }\n\t  }, {\n\t    key: 'watchRangeChange',\n\t    value: function watchRangeChange() {\n\t      var _this4 = this;\n\n\t      this.Scope.$watchGroup([function () {\n\t        return _this4.rangeStart;\n\t      }, function () {\n\t        return _this4.rangeEnd;\n\t      }], function (newRange, oldRange) {\n\t        var newStart = newRange[0];\n\t        var newEnd = newRange[1];\n\t        var oldStart = oldRange[0];\n\t        var oldEnd = oldRange[1];\n\n\t        if (_this4.maxDay() && newStart.isSame(_this4.maxDay(), 'M')) {\n\t          newStart = newStart.clone().subtract(1, 'M');\n\t        }\n\n\t        if (!_this4.startCalendar && !_this4.endCalendar) {\n\t          _this4.startCalendar = newStart;\n\t          _this4.endCalendar = newStart.clone().add(1, 'M');\n\t        }\n\n\t        if (_this4.areCalendarsLinked()) {\n\t          if (!(newStart.isSame(_this4.startCalendar, 'M') || newStart.isSame(_this4.endCalendar, 'M'))) {\n\t            if (newStart.isSame(oldStart, 'M') && newEnd && !newEnd.isSame(oldEnd, 'M')) {\n\t              _this4.startCalendar = newEnd.clone().subtract(1, 'M');\n\t              _this4.endCalendar = newEnd;\n\t            } else {\n\t              _this4.startCalendar = newStart;\n\t              _this4.endCalendar = newStart.clone().add(1, 'M');\n\t            }\n\t          } else if (newEnd && newEnd.isAfter(_this4.endCalendar, 'M')) {\n\t            _this4.startCalendar = newEnd;\n\t            _this4.endCalendar = newEnd.clone().add(1, 'M');\n\t          } else if (!newStart.isSame(_this4.endCalendar, 'M')) {\n\t            _this4.startCalendar = newStart;\n\t            _this4.endCalendar = newStart.clone().add(1, 'M');\n\t          }\n\t        } else {\n\t          if (!(newStart.isSame(_this4.startCalendar, 'M') || newStart.isSame(_this4.endCalendar, 'M'))) {\n\t            if (newStart.isBefore(_this4.startCalendar, 'M')) {\n\t              _this4.startCalendar = newStart;\n\n\t              if (newEnd && !newEnd.isSame(_this4.endCalendar, 'M')) {\n\t                if (newStart.isSame(newEnd, 'M')) {\n\t                  _this4.endCalendar = newStart.clone().add(1, \"M\");\n\t                } else {\n\t                  _this4.endCalendar = newEnd;\n\t                }\n\t              }\n\t            } else if (newStart.isAfter(_this4.endCalendar)) {\n\t              _this4.startCalendar = newStart;\n\t              _this4.endCalendar = newStart.clone().add(1, 'M');\n\t            }\n\t          } else if (newEnd && newEnd.isAfter(_this4.endCalendar, 'M')) {\n\t            _this4.endCalendar = newEnd;\n\t          }\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'areCalendarsLinked',\n\t    value: function areCalendarsLinked() {\n\t      return angular.isDefined(this.linkedCalendars()) ? this.linkedCalendars() : true;\n\t    }\n\t  }]);\n\n\t  return DateRangePickerController;\n\t})();\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\texports.Calendar = Calendar;\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n\tfunction Calendar() {\n\t  'ngInject';\n\n\t  var directive = {\n\t    restrict: 'E',\n\t    scope: {\n\t      minDay: '&',\n\t      maxDay: '&',\n\t      weekStart: '&',\n\t      getMonth: '&month',\n\t      getInterceptors: '&interceptors',\n\t      rangeStart: '&',\n\t      rangeEnd: '&',\n\t      selectedDay: '&',\n\t      minMonth: '&',\n\t      maxMonth: '&',\n\t      weekDaysName: '&',\n\t      monthFormat: '&',\n\t      inputFormat: '&',\n\t      showInput: '&',\n\t      api: '=?'\n\t    },\n\t    templateUrl: 'app/directives/calendar/calendar.html',\n\t    controller: CalendarController,\n\t    controllerAs: 'month',\n\t    bindToController: true\n\t  };\n\n\t  return directive;\n\t}\n\n\tvar CalendarController = (function () {\n\t  CalendarController.$inject = [\"moment\", \"$scope\", \"$attrs\"];\n\t  function CalendarController(moment, $scope, $attrs) {\n\t    'ngInject';\n\n\t    _classCallCheck(this, CalendarController);\n\n\t    this.Moment = moment;\n\t    this.Scope = $scope;\n\t    this.Attrs = $attrs;\n\t    this.api && this.setApi();\n\t    this.render();\n\t  }\n\n\t  _createClass(CalendarController, [{\n\t    key: 'setApi',\n\t    value: function setApi() {\n\t      _extends(this.api, {\n\t        render: this.render.bind(this),\n\t        moveToNext: this.moveToNext.bind(this),\n\t        showLeftArrow: this.showLeftArrow.bind(this)\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      this.defaultWeekDaysNames = this.weekDaysName() || ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\t      this.firstDayOfWeek = this.weekStart() || 'su';\n\t      this.daysOfWeek = this.buildWeek(this.firstDayOfWeek);\n\t      this.calendar = this.buildCalendar(this.getMonth());\n\t      this.interceptors = this.getInterceptors() || {};\n\t      this.setListeners();\n\t      this.daysName = this.setWeekDaysNames(this.daysOfWeek);\n\t    }\n\t  }, {\n\t    key: 'setValue',\n\t    value: function setValue() {\n\t      if (this.selectedDay()) {\n\t        this.value = this.selectedDay().format(this.getInputFormat());\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setWeekDaysNames',\n\t    value: function setWeekDaysNames(weekDays) {\n\t      var daysName = arguments.length <= 1 || arguments[1] === undefined ? this.defaultWeekDaysNames : arguments[1];\n\n\t      var weekDayNames = [];\n\t      var defPosMap = this.Moment.weekdaysMin().reduce(function (obj, day, index) {\n\t        obj[day.toLowerCase()] = index;\n\t        return obj;\n\t      }, {});\n\n\t      weekDays.forEach(function (day, index) {\n\t        var defPos = defPosMap[day];\n\t        weekDayNames[index] = daysName[defPos];\n\t      });\n\n\t      return weekDayNames;\n\t    }\n\t  }, {\n\t    key: 'setListeners',\n\t    value: function setListeners() {\n\t      var _this = this;\n\n\t      this.Scope.$watch(function () {\n\t        return _this.getMonth();\n\t      }, function (newMonth) {\n\t        _this.calendar = _this.buildCalendar(newMonth);\n\t      });\n\n\t      this.Scope.$watchGroup([function () {\n\t        return _this.rangeStart();\n\t      }, function () {\n\t        return _this.rangeEnd();\n\t      }], function () {\n\t        _this.setValue();\n\t        _this.updateDaysProperties(_this.calendar.monthWeeks);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'updateDaysProperties',\n\t    value: function updateDaysProperties(monthWeeks) {\n\t      var _this2 = this;\n\n\t      var minDay = this.minDay();\n\t      var maxDay = this.maxDay();\n\t      var selectedDay = this.selectedDay();\n\t      var rangeStart = this.rangeStart();\n\t      var rangeEnd = this.rangeEnd();\n\t      monthWeeks.forEach(function (week) {\n\t        week.forEach(function (day) {\n\t          day.selected = day.mo.isSame(selectedDay || null, 'day');\n\t          day.inRange = _this2.isInRange(day.mo);\n\t          day.rangeStart = day.mo.isSame(rangeStart || null, 'day');\n\t          day.rangeEnd = day.mo.isSame(rangeEnd || null, 'day');\n\t          if (minDay) {\n\t            day.disabled = day.mo.isBefore(minDay, 'day');\n\t          }\n\t          if (maxDay && !day.disabled) {\n\t            day.disabled = day.mo.isAfter(maxDay, 'day');\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'buildWeek',\n\t    value: function buildWeek(firstDay) {\n\t      var daysOfWeek = this.Moment.weekdaysMin().map(function (day) {\n\t        return day.toLowerCase();\n\t      });\n\t      var pivot = daysOfWeek.indexOf(firstDay.toLowerCase());\n\t      var firstHalf = daysOfWeek.slice(0, pivot);\n\t      var secondHalf = daysOfWeek.slice(pivot, daysOfWeek.length);\n\t      var week = secondHalf.concat(firstHalf);\n\n\t      return week;\n\t    }\n\t  }, {\n\t    key: 'buildCalendar',\n\t    value: function buildCalendar() {\n\t      var date = arguments.length <= 0 || arguments[0] === undefined ? this.Moment() : arguments[0];\n\n\t      var monthWeeks = [[], [], [], [], [], []];\n\t      var monthRange = this.getMonthDateRange(date.year(), date.month() + 1);\n\t      var firstDayOfMonth = monthRange.start;\n\n\t      var pivot = this.daysOfWeek.indexOf(firstDayOfMonth.format('dd').toLowerCase());\n\t      var tmpDate = firstDayOfMonth.clone().subtract(pivot, 'd');\n\n\t      for (var i = 0; i < 6; i++) {\n\t        for (var j = 0; j < 7; j++) {\n\t          monthWeeks[i][j] = {\n\t            mo: tmpDate,\n\t            currentDay: tmpDate.isSame(this.Moment(), 'day'),\n\t            currentMonth: tmpDate.isSame(date, 'month')\n\t          };\n\t          tmpDate = tmpDate.clone().add(1, 'd');\n\t        }\n\t      }\n\n\t      this.updateDaysProperties(monthWeeks);\n\n\t      return {\n\t        currentCalendar: date,\n\t        selectedDate: date,\n\t        firstDayOfMonth: monthRange.start.format('D'),\n\t        lastDayOfMonth: monthRange.end.format('D'),\n\t        monthWeeks: monthWeeks\n\t      };\n\t    }\n\t  }, {\n\t    key: 'moveCalenderByMonth',\n\t    value: function moveCalenderByMonth(months) {\n\t      var mo = this.calendar.currentCalendar;\n\t      this.month = mo.clone().add(months, 'M');\n\t      this.calendar = this.buildCalendar(this.month.clone());\n\t    }\n\t  }, {\n\t    key: 'moveToNext',\n\t    value: function moveToNext() {\n\t      if (this.interceptors.moveToNextClicked) {\n\t        this.interceptors.moveToNextClicked.call(this.interceptors.context);\n\t      } else {\n\t        this.moveCalenderByMonth(1);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'moveToPrev',\n\t    value: function moveToPrev() {\n\t      if (this.interceptors.moveToPrevClicked) {\n\t        this.interceptors.moveToPrevClicked.call(this.interceptors.context);\n\t      } else {\n\t        this.moveCalenderByMonth(-1);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getMonthDateRange',\n\t    value: function getMonthDateRange(year, month) {\n\t      var startDate = this.Moment([year, month - 1]);\n\t      var endDate = this.Moment(startDate).endOf('month');\n\t      return { start: startDate, end: endDate };\n\t    }\n\t  }, {\n\t    key: 'isInRange',\n\t    value: function isInRange(day) {\n\t      var inRange = false;\n\t      var rangeStart = this.rangeStart() || null;\n\t      var rangeEnd = this.rangeEnd() || null;\n\t      inRange = day.isBetween(rangeStart, rangeEnd) || day.isSame(rangeStart, 'day') || inRange || day.isSame(rangeEnd, 'day');\n\n\t      return inRange;\n\t    }\n\t  }, {\n\t    key: 'daySelected',\n\t    value: function daySelected(day) {\n\t      if (!day.disabled) {\n\t        if (this.interceptors.daySelected) {\n\t          this.interceptors.daySelected.call(this.interceptors.context, day.mo);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'dateInputEntered',\n\t    value: function dateInputEntered(ev, value) {\n\t      if (ev.keyCode == 13) {\n\t        this.dateInputSelected(ev, value);\n\n\t        // should prevent form submit if placed inside a form\n\t        ev.preventDefault();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'dateInputSelected',\n\t    value: function dateInputSelected(ev, value) {\n\t      var day = this.Moment(value, this.getInputFormat(), true);\n\n\t      if (day.isValid()) {\n\t        var minDay = this.minDay();\n\t        var maxDay = this.maxDay();\n\t        day = minDay && day.isBefore(minDay, 'day') ? minDay : day;\n\t        day = maxDay && day.isAfter(maxDay, 'day') ? maxDay : day;\n\n\t        if (!this.selectedDay() || !this.selectedDay().isSame(day, 'day')) {\n\t          if (this.interceptors.inputSelected) {\n\t            this.interceptors.inputSelected(day);\n\t          } else {\n\t            this.daySelected({ mo: day });\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getFormattedMonth',\n\t    value: function getFormattedMonth(day) {\n\t      return this.Moment(day).format(this.getMonthFormat());\n\t    }\n\t  }, {\n\t    key: 'getMonthFormat',\n\t    value: function getMonthFormat() {\n\t      return this.monthFormat() || 'MMMM YYYY';\n\t    }\n\t  }, {\n\t    key: 'getInputFormat',\n\t    value: function getInputFormat() {\n\t      return this.inputFormat() || 'MMM DD, YYYY';\n\t    }\n\t  }, {\n\t    key: 'showLeftArrow',\n\t    value: function showLeftArrow() {\n\t      if (this.minMonth()) {\n\t        return !this.minMonth().isSame(this.calendar.currentCalendar.clone().subtract(1, 'M'), 'M');\n\t      } else if (this.minDay()) {\n\t        return !this.minDay().isSame(this.calendar.currentCalendar, 'M');\n\t      } else {\n\t        return true;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'showRightArrow',\n\t    value: function showRightArrow() {\n\t      if (this.maxMonth()) {\n\t        return !this.maxMonth().isSame(this.getMonth().clone().add(1, 'M'), 'M');\n\t      } else if (this.maxDay()) {\n\t        return !this.maxDay().isSame(this.getMonth(), 'M');\n\t      } else {\n\t        return true;\n\t      }\n\t    }\n\t  }, {\n\t    key: '_showInput',\n\t    value: function _showInput() {\n\t      return angular.isDefined(this.showInput()) ? this.showInput() : true;\n\t    }\n\t  }]);\n\n\t  return CalendarController;\n\t})();\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\texports.ObDateRangePicker = ObDateRangePicker;\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n\tfunction ObDateRangePicker() {\n\t  'ngInject';\n\n\t  var directive = {\n\t    restrict: 'E',\n\t    scope: {\n\t      weekStart: '&',\n\t      range: '=?',\n\t      weekDaysName: '&',\n\t      format: '&',\n\t      ranges: '&',\n\t      minDay: '&',\n\t      maxDay: '&',\n\t      monthFormat: '&',\n\t      inputFormat: '&',\n\t      onApply: '&',\n\t      linkedCalendars: '&',\n\t      autoApply: '&',\n\t      disabled: '&',\n\t      calendarsAlwaysOn: '&',\n\t      api: '=?'\n\t    },\n\t    controller: ObDateRangePickerController,\n\t    templateUrl: 'app/directives/ob-date-range-picker/ob-date-range-picker.html',\n\t    controllerAs: 'obDateRangePicker',\n\t    bindToController: true\n\t  };\n\n\t  return directive;\n\t}\n\n\tvar ObDateRangePickerController = (function () {\n\t  ObDateRangePickerController.$inject = [\"$document\", \"$element\", \"$scope\", \"moment\", \"dateRangePickerConf\"];\n\t  function ObDateRangePickerController($document, $element, $scope, moment, dateRangePickerConf) {\n\t    'ngInject';\n\n\t    var _this = this;\n\n\t    _classCallCheck(this, ObDateRangePickerController);\n\n\t    this.Element = $element;\n\t    this.Document = $document;\n\t    this.Scope = $scope;\n\t    this.Moment = moment;\n\t    this.range = this.range || dateRangePickerConf.range || {};\n\t    this.pickerApi = {};\n\n\t    //config setup\n\t    this.weekStart = this.weekStart() ? this.weekStart : function () {\n\t      return dateRangePickerConf.weekStart;\n\t    };\n\t    this.weekDaysName = this.weekDaysName() ? this.weekDaysName : function () {\n\t      return dateRangePickerConf.weekDaysName;\n\t    };\n\t    this.format = this.format() ? this.format : function () {\n\t      return dateRangePickerConf.format;\n\t    };\n\t    this.ranges = this.ranges() ? this.ranges : function () {\n\t      return dateRangePickerConf.ranges;\n\t    };\n\t    this.minDay = this.minDay() ? this.minDay : function () {\n\t      return dateRangePickerConf.minDay;\n\t    };\n\t    this.maxDay = this.maxDay() ? this.maxDay : function () {\n\t      return dateRangePickerConf.maxDay;\n\t    };\n\t    this.monthFormat = this.monthFormat() ? this.monthFormat : function () {\n\t      return dateRangePickerConf.monthFormat;\n\t    };\n\t    this.inputFormat = this.inputFormat() ? this.inputFormat : function () {\n\t      return dateRangePickerConf.inputFormat;\n\t    };\n\t    this.linkedCalendars = angular.isDefined(this.linkedCalendars()) ? this.linkedCalendars : function () {\n\t      return dateRangePickerConf.linkedCalendars;\n\t    };\n\t    this.autoApply = angular.isDefined(this.autoApply()) ? this.autoApply : function () {\n\t      return dateRangePickerConf.autoApply;\n\t    };\n\t    this.disabled = angular.isDefined(this.disabled()) ? this.disabled : function () {\n\t      return dateRangePickerConf.disabled;\n\t    };\n\t    this.calendarsAlwaysOn = angular.isDefined(this.calendarsAlwaysOn()) ? this.calendarsAlwaysOn : function () {\n\t      return dateRangePickerConf.calendarsAlwaysOn;\n\t    };\n\n\t    this.isCustomVisible = this.calendarsAlwaysOn();\n\n\t    this.setOpenCloseLogic();\n\t    this.setWatchers();\n\t    this.value = 'Select a Range';\n\n\t    this.api && _extends(this.api, {\n\t      setDateRange: this.setDateRange.bind(this),\n\t      togglePicker: this.togglePicker.bind(this),\n\t      render: function render() {\n\t        _this.render();\n\t        _this.pickerApi.render();\n\t      }\n\t    });\n\t    this.preRanges = this.ranges() || [];\n\t    if (this.preRanges.length) {\n\t      this.preRanges.push({\n\t        name: 'Custom',\n\t        isCustom: true\n\t      });\n\t    } else {\n\t      this.isCustomVisible = true;\n\t    }\n\n\t    this.render();\n\t    this.setListeners();\n\t  }\n\n\t  _createClass(ObDateRangePickerController, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      this._range = {\n\t        start: this.Moment(),\n\t        end: this.Moment()\n\t      };\n\t      this.setPredefinedStatus();\n\n\t      if (this.range.start && this.range.end && !this.Moment.isMoment(this.range.start) && !this.Moment.isMoment(this.range.end) && this.format()) {\n\t        this._range = {\n\t          start: this.Moment(this.range.start, this.getFormat()),\n\t          end: this.Moment(this.range.end, this.getFormat())\n\t        };\n\t      } else if (this.Moment.isMoment(this.range.start) && this.Moment.isMoment(this.range.end)) {\n\t        this._range = {\n\t          start: this.range.start,\n\t          end: this.range.end\n\t        };\n\t      } else if (this.preRanges.length > 1) {\n\t        var firstPreRange = this.preRanges[0];\n\t        this._range.start = firstPreRange.start;\n\t        this._range.end = firstPreRange.end;\n\t      }\n\n\t      if (this._range.start.isAfter(this._range.end)) {\n\t        this._range.start = this._range.end.clone();\n\t      } else if (this._range.end.isBefore(this._range.start)) {\n\t        this._range.end = this._range.start.clone();\n\t      }\n\n\t      this.applyMinMaxDaysToRange();\n\t      this.setRange();\n\t      this.markPredefined(this._range.start, this._range.end);\n\t      this.setPickerInterceptors();\n\t      this.isCustomVisible = this.calendarsAlwaysOn();\n\t    }\n\t  }, {\n\t    key: 'applyMinMaxDaysToRange',\n\t    value: function applyMinMaxDaysToRange() {\n\t      if (this.minDay()) {\n\t        var minDay = this._getMinDay();\n\t        this._range.start = this._range.start.isBefore(minDay, 'd') ? minDay : this._range.start;\n\t        this._range.end = this._range.end.isBefore(minDay, 'd') ? minDay : this._range.end;\n\t      }\n\n\t      if (this.maxDay()) {\n\t        var maxDay = this._getMaxDay();\n\t        this._range.start = this._range.start.isAfter(maxDay) ? maxDay : this._range.start;\n\t        this._range.end = this._range.end.isAfter(maxDay) ? maxDay : this._range.end;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setPickerInterceptors',\n\t    value: function setPickerInterceptors() {\n\t      var _this2 = this;\n\n\t      this.pickerInterceptors = {\n\t        rangeSelectedByClick: function rangeSelectedByClick() {\n\t          if (_this2.autoApply()) {\n\t            _this2.applyChanges();\n\t          }\n\t        }\n\t      };\n\t    }\n\t  }, {\n\t    key: 'setPredefinedStatus',\n\t    value: function setPredefinedStatus() {\n\t      var _this3 = this;\n\n\t      this.preRanges.forEach(function (range) {\n\t        if (!range.isCustom) {\n\t          range.disabled = false;\n\n\t          if (_this3.minDay()) {\n\t            var minDay = _this3._getMinDay();\n\t            range.disabled = range.start.isBefore(minDay, 'd');\n\t          }\n\n\t          if (!range.disabled && _this3.maxDay()) {\n\t            var maxDay = _this3._getMaxDay();\n\t            range.disabled = range.end.isAfter(maxDay, 'd');\n\t          }\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setWatchers',\n\t    value: function setWatchers() {\n\t      var _this4 = this;\n\n\t      this.Scope.$watchGroup([function () {\n\t        return _this4._range.start;\n\t      }, function () {\n\t        return _this4._range.end;\n\t      }], function (_ref) {\n\t        var _ref2 = _slicedToArray(_ref, 2);\n\n\t        var start = _ref2[0];\n\t        var end = _ref2[1];\n\n\t        if (!_this4.selfChange) {\n\t          if (start && end) {\n\t            if (_this4.preRanges.length) {\n\t              _this4.preRanges[_this4.preRanges.length - 1].start = start;\n\t              _this4.preRanges[_this4.preRanges.length - 1].end = end;\n\t              _this4.markPredefined(start, end);\n\t            }\n\t            _this4.value = _this4.getRangeValue();\n\t          }\n\t        }\n\n\t        _this4.selfChange = false;\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setOpenCloseLogic',\n\t    value: function setOpenCloseLogic() {\n\t      this.isPickerVisible = false;\n\t      this.pickerPopup = angular.element(this.Element[0].querySelector('.picker'));\n\t      this.elemClickFlag = false;\n\t    }\n\t  }, {\n\t    key: 'setListeners',\n\t    value: function setListeners() {\n\t      var _this5 = this;\n\n\t      var events = {\n\t        documentClick: function documentClick() {\n\t          if (_this5.elemClickFlag) {\n\t            _this5.elemClickFlag = false;\n\t          } else {\n\t            _this5.isPickerVisible && _this5.discardChanges();\n\t            _this5.Scope.$apply();\n\t          }\n\t        },\n\t        documentEsc: function documentEsc(e) {\n\t          if (e.keyCode == 27 && _this5.isPickerVisible) {\n\t            _this5.discardChanges();\n\t            _this5.hidePicker();\n\t            _this5.Scope.$apply();\n\t          }\n\t        },\n\t        pickerClick: function pickerClick() {\n\t          _this5.elemClickFlag = true;\n\t          _this5.Scope.$apply();\n\t        }\n\t      };\n\n\t      this.pickerPopup.on('click', events.pickerClick.bind(this));\n\t      this.Document.on('click', events.documentClick.bind(this));\n\t      this.Document.on('keydown', events.documentEsc.bind(this));\n\n\t      this.Scope.$on('$destroy', function () {\n\t        _this5.pickerPopup.off('click', events.pickerClick);\n\t        _this5.Document.off('click', events.documentClick);\n\t        _this5.Document.off('keydown', events.documentClick);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'togglePicker',\n\t    value: function togglePicker() {\n\t      var disabled = angular.isDefined(this.disabled()) ? this.disabled() : false;\n\t      if (!disabled && !this.isPickerVisible) {\n\t        this.isPickerVisible = true;\n\t        this.elemClickFlag = true;\n\t      } else {\n\t        this.isPickerVisible = false;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'hidePicker',\n\t    value: function hidePicker() {\n\t      this.isPickerVisible = false;\n\t    }\n\t  }, {\n\t    key: 'setRange',\n\t    value: function setRange() {\n\t      var range = arguments.length <= 0 || arguments[0] === undefined ? this._range : arguments[0];\n\n\t      if (this.format()) {\n\t        this.range.start = range.start.format(this.getFormat());\n\t        this.range.end = range.end.format(this.getFormat());\n\t      } else {\n\t        this.range.start = range.start;\n\t        this.range.end = range.end;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'predefinedRangeSelected',\n\t    value: function predefinedRangeSelected(range, index) {\n\t      if (!range.disabled) {\n\t        if (!range.isCustom) {\n\t          this.selfChange = true;\n\t          this.selectedRengeIndex = index;\n\t          this.value = range.name;\n\t          this._range.start = range.start;\n\t          this._range.end = range.end;\n\t          this.isCustomVisible = this.calendarsAlwaysOn() || false;\n\t          this.applyChanges();\n\t        } else {\n\t          this.isCustomVisible = true;\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getFormat',\n\t    value: function getFormat() {\n\t      return this.format() || 'MM-DD-YYYY';\n\t    }\n\t  }, {\n\t    key: 'discardChanges',\n\t    value: function discardChanges() {\n\t      var format = this.getFormat();\n\t      var start = this.Moment(this.range.start, format);\n\t      var end = this.Moment(this.range.end, format);\n\t      this._range.start = start;\n\t      this._range.end = end;\n\t      this.value = this.getRangeValue();\n\t      this.pickerApi.setCalendarPosition(start, end);\n\t      this.hidePicker();\n\t    }\n\t  }, {\n\t    key: 'markPredefined',\n\t    value: function markPredefined(start, end) {\n\t      this.selectedRengeIndex = this.preRanges.findIndex(function (range) {\n\t        return start.isSame(range.start, 'day') && end.isSame(range.end, 'day');\n\t      });\n\t    }\n\t  }, {\n\t    key: 'getRangeValue',\n\t    value: function getRangeValue() {\n\t      var _this6 = this;\n\n\t      var value = undefined;\n\t      var format = this.getInputFormat();\n\t      if (this.preRanges.length) {\n\t        var index = this.preRanges.findIndex(function (range) {\n\t          return _this6._range.start.isSame(range.start, 'day') && _this6._range.end.isSame(range.end, 'day');\n\t        });\n\n\t        if (index !== -1) {\n\t          if (this.preRanges[index].isCustom) {\n\t            value = this.preRanges[index].start.format(format) + ' - ' + this.preRanges[index].end.format(format);\n\t          } else {\n\t            value = this.preRanges[index].name;\n\t          }\n\t        }\n\t      } else {\n\t        value = this._range.start.format(format) + ' - ' + this._range.end.format(format);\n\t      }\n\n\t      return value;\n\t    }\n\t  }, {\n\t    key: 'applyChanges',\n\t    value: function applyChanges() {\n\t      var callApply = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n\t      this.setRange();\n\t      this.hidePicker();\n\t      this.pickerApi.setCalendarPosition(this._range.start, this._range.end);\n\t      if (callApply && this.onApply) {\n\t        this.onApply({ start: this._range.start, end: this._range.end });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getInputFormat',\n\t    value: function getInputFormat() {\n\t      return this.inputFormat() || 'MMM DD, YYYY';\n\t    }\n\t  }, {\n\t    key: 'setDateRange',\n\t    value: function setDateRange(range) {\n\t      this._range.start = range.start;\n\t      this._range.end = range.end;\n\t      this.applyChanges(false);\n\t    }\n\t  }, {\n\t    key: '_getMinDay',\n\t    value: function _getMinDay() {\n\t      return this.minDay() ? this.Moment(this.minDay(), this.getFormat()) : undefined;\n\t    }\n\t  }, {\n\t    key: '_getMaxDay',\n\t    value: function _getMaxDay() {\n\t      return this.maxDay() ? this.Moment(this.maxDay(), this.getFormat()) : undefined;\n\t    }\n\t  }]);\n\n\t  return ObDateRangePickerController;\n\t})();\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\texports.ObDayPicker = ObDayPicker;\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n\tfunction ObDayPicker() {\n\t  'ngInject';\n\n\t  var directive = {\n\t    restrict: 'E',\n\t    scope: {\n\t      weekStart: '&',\n\t      selectedDay: '=?',\n\t      weekDaysName: '&',\n\t      format: '&',\n\t      minDay: '&',\n\t      maxDay: '&',\n\t      monthFormat: '&',\n\t      inputFormat: '&',\n\t      onApply: '&',\n\t      disabled: '&',\n\t      formName: '@name',\n\t      isValidDateEnabled: '&validDay',\n\t      autoApply: '&',\n\t      api: '=?'\n\t    },\n\t    controller: ObDayPickerController,\n\t    templateUrl: 'app/directives/ob-day-picker/ob-day-picker.html',\n\t    controllerAs: 'dayPicker',\n\t    bindToController: true\n\t  };\n\n\t  return directive;\n\t}\n\n\tvar ObDayPickerController = (function () {\n\t  ObDayPickerController.$inject = [\"$document\", \"$element\", \"$scope\", \"$timeout\", \"moment\", \"datePickerConf\"];\n\t  function ObDayPickerController($document, $element, $scope, $timeout, moment, datePickerConf) {\n\t    'ngInject';\n\n\t    var _this = this;\n\n\t    _classCallCheck(this, ObDayPickerController);\n\n\t    this.Element = $element;\n\t    this.Document = $document;\n\t    this.Scope = $scope;\n\t    this.$timeout = $timeout;\n\t    this.Moment = moment;\n\n\t    //config setup\n\t    this.weekStart = this.weekStart() ? this.weekStart : function () {\n\t      return datePickerConf.weekStart;\n\t    };\n\t    this.weekDaysName = this.weekDaysName() ? this.weekDaysName : function () {\n\t      return datePickerConf.weekDaysName;\n\t    };\n\t    this.format = this.format() ? this.format : function () {\n\t      return datePickerConf.format;\n\t    };\n\t    this.minDay = this.minDay() ? this.minDay : function () {\n\t      return datePickerConf.minDay;\n\t    };\n\t    this.maxDay = this.maxDay() ? this.maxDay : function () {\n\t      return datePickerConf.maxDay;\n\t    };\n\t    this.monthFormat = this.monthFormat() ? this.monthFormat : function () {\n\t      return datePickerConf.monthFormat;\n\t    };\n\t    this.inputFormat = this.inputFormat() ? this.inputFormat : function () {\n\t      return datePickerConf.inputFormat;\n\t    };\n\t    this.autoApply = angular.isDefined(this.autoApply()) ? this.autoApply : function () {\n\t      return datePickerConf.autoApply;\n\t    };\n\t    this.disabled = angular.isDefined(this.disabled()) ? this.disabled : function () {\n\t      return datePickerConf.disabled;\n\t    };\n\t    this.isValidDateEnabled = angular.isDefined(this.isValidDateEnabled()) ? this.isValidDateEnabled : function () {\n\t      return datePickerConf.isValidDateEnabled;\n\t    };\n\n\t    this.formName = this.formName || 'dayPickerInput';\n\n\t    this.setOpenCloseLogic();\n\t    this._selectedDay = this.getSelectedDay();\n\t    this.value = this.Moment(this._selectedDay).format(this.getFormat());\n\t    this.setCalendarInterceptors();\n\t    this.calendarApi = {};\n\n\t    this.api && _extends(this.api, {\n\t      render: function render() {\n\t        _this.render();\n\t      }\n\t    });\n\n\t    this.setListeners();\n\t    this.dayValidity = this.checkIfDayIsValid(this._selectedDay);\n\t    this.$timeout(function () {\n\t      _this.applyValidity(_this.dayValidity);\n\t    });\n\t  }\n\n\t  _createClass(ObDayPickerController, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      this.dayValidity = this.checkIfDayIsValid(this._selectedDay);\n\t      this.applyValidity(this.dayValidity);\n\t      this.calendarApi.render && this.calendarApi.render();\n\t    }\n\t  }, {\n\t    key: 'setOpenCloseLogic',\n\t    value: function setOpenCloseLogic() {\n\t      this.isPickerVisible = false;\n\t      this.pickerPopup = angular.element(this.Element[0].querySelector('.picker'));\n\t      this.elemClickFlag = false;\n\t    }\n\t  }, {\n\t    key: 'setCalendarInterceptors',\n\t    value: function setCalendarInterceptors() {\n\t      this.calendarInterceptors = {\n\t        daySelected: this.daySelected.bind(this)\n\t      };\n\t    }\n\t  }, {\n\t    key: 'setListeners',\n\t    value: function setListeners() {\n\t      var _this2 = this;\n\n\t      var events = {\n\t        documentClick: function documentClick() {\n\t          if (_this2.elemClickFlag) {\n\t            _this2.elemClickFlag = false;\n\t          } else {\n\t            _this2.onBlur();\n\t            _this2.Scope.$digest();\n\t          }\n\t        },\n\t        pickerClick: function pickerClick() {\n\t          _this2.elemClickFlag = true;\n\t          _this2.Scope.$digest();\n\t        }\n\t      };\n\n\t      this.pickerPopup.on('click', events.pickerClick.bind(this));\n\t      this.Document.on('click', events.documentClick.bind(this));\n\n\t      this.Scope.$on('$destroy', function () {\n\t        _this2.pickerPopup.off('click', events.pickerClick);\n\t        _this2.Document.off('click', events.documentClick);\n\t      });\n\n\t      this.Scope.$watchGroup([function () {\n\t        return _this2.Moment(_this2.minDay(), _this2.getFormat()).format();\n\t      }, function () {\n\t        return _this2.Moment(_this2.maxDay(), _this2.getFormat()).format();\n\t      }], function (min, max) {\n\t        if (min && min[0] || max && max[0]) {\n\t          _this2.render();\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'showPicker',\n\t    value: function showPicker() {\n\t      var disabled = angular.isDefined(this.disabled()) ? this.disabled() : false;\n\t      if (!disabled && !this.isPickerVisible) {\n\t        this.isPickerVisible = true;\n\t      }\n\t      this.elemClickFlag = true;\n\t    }\n\t  }, {\n\t    key: 'hidePicker',\n\t    value: function hidePicker() {\n\t      this.isPickerVisible = false;\n\t    }\n\t  }, {\n\t    key: 'daySelected',\n\t    value: function daySelected(day) {\n\t      var _this3 = this;\n\n\t      var timeout = arguments.length <= 1 || arguments[1] === undefined ? 100 : arguments[1];\n\n\t      this.applyValidity(this.checkIfDayIsValid(day));\n\t      if (!day.isSame(this._selectedDay, 'day')) {\n\t        this.calendarApi.render();\n\t        this.value = this.Moment(day).format(this.getFormat());\n\t        this._selectedDay = day;\n\n\t        this.$timeout(function () {\n\t          _this3.hidePicker();\n\t          _this3.updateSelectedDate(day);\n\t        }, timeout);\n\t      } else {\n\t        this.hidePicker();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'dateInputEntered',\n\t    value: function dateInputEntered(e, value) {\n\t      var isDaySelectable = this.checkIfDayIsValid(value);\n\t      switch (e.keyCode) {\n\t        case 9:\n\t        case 13:\n\t          var day = this.getInputValue();\n\t          if (isDaySelectable) {\n\t            this.daySelected(day, 0);\n\t          } else {\n\t            this.hidePicker();\n\n\t            // should prevent form submit if placed inside a form\n\t            e.keyCode === 13 && e.preventDefault();\n\t          }\n\t          break;\n\t        case 40:\n\t          this.isPickerVisible = true;\n\t          break;\n\t        case 27:\n\t          this.isPickerVisible = false;\n\t          this.value = this._selectedDay.format(this.getFormat());\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getInputValue',\n\t    value: function getInputValue() {\n\t      return this.Moment(this.value, this.getFormat(), true);\n\t    }\n\t  }, {\n\t    key: 'onBlur',\n\t    value: function onBlur() {\n\t      var currentValue = this.getInputValue();\n\t      var isValid = this.checkIfDayIsValid(currentValue);\n\t      if (isValid) {\n\t        this.daySelected(currentValue);\n\t      } else {\n\t        this.hidePicker();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'updateValidity',\n\t    value: function updateValidity() {\n\t      var day = this.getInputValue();\n\t      var isValid = this.checkIfDayIsValid(day);\n\t      this.applyValidity(isValid);\n\n\t      if (isValid && this.autoApply() && !day.isSame(this._selectedDay, 'day')) {\n\t        this._selectedDay = day;\n\t        this.updateSelectedDate(day);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'checkIfDayIsValid',\n\t    value: function checkIfDayIsValid(value) {\n\t      var day = this.Moment(value, this.getFormat(), true);\n\t      var minDay = this._getMinDay();\n\t      var maxDay = this._getMaxDay();\n\t      var isValid = day.isValid();\n\n\t      if (isValid && minDay) {\n\t        isValid = day.isAfter(minDay, 'day') || day.isSame(minDay, 'day');\n\t      }\n\n\t      if (isValid && maxDay) {\n\t        isValid = day.isBefore(maxDay, 'day') || day.isSame(maxDay, 'day');\n\t      }\n\n\t      return isValid;\n\t    }\n\t  }, {\n\t    key: 'applyValidity',\n\t    value: function applyValidity(isDateValid) {\n\t      if (this.Scope[this.formName]) {\n\t        if (this.disabled && this.disabled()) {\n\t          this.Scope[this.formName].$setValidity('validDay', true);\n\t          this.dayValidity = true;\n\t        } else if (this.isValidDateEnabled() && this.Scope[this.formName]) {\n\t          this.Scope[this.formName].$setValidity('validDay', isDateValid);\n\t          this.dayValidity = isDateValid;\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'updateSelectedDate',\n\t    value: function updateSelectedDate() {\n\t      var day = arguments.length <= 0 || arguments[0] === undefined ? this._selectedDay : arguments[0];\n\n\t      if (this.format()) {\n\t        this.selectedDay = day.format(this.getFormat());\n\t      } else {\n\t        this.selectedDay = day;\n\t      }\n\n\t      this.onApply({ day: this.selectedDay });\n\t    }\n\t  }, {\n\t    key: 'getSelectedDay',\n\t    value: function getSelectedDay() {\n\t      return this.Moment(this.selectedDay || this.Moment(), this.getFormat());\n\t    }\n\t  }, {\n\t    key: 'getFormat',\n\t    value: function getFormat() {\n\t      return this.format() || 'MMM DD, YYYY';\n\t    }\n\t  }, {\n\t    key: '_getMinDay',\n\t    value: function _getMinDay() {\n\t      return this.minDay() ? this.Moment(this.minDay(), this.getFormat()) : undefined;\n\t    }\n\t  }, {\n\t    key: '_getMaxDay',\n\t    value: function _getMaxDay() {\n\t      return this.maxDay() ? this.Moment(this.maxDay(), this.getFormat()) : undefined;\n\t    }\n\t  }]);\n\n\t  return ObDayPickerController;\n\t})();\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t/*eslint-disable */\n\t'use strict';\n\n\tif (!Array.prototype.findIndex) {\n\t  Array.prototype.findIndex = function (predicate) {\n\t    if (this === null) {\n\t      throw new TypeError('Array.prototype.findIndex called on null or undefined');\n\t    }\n\t    if (typeof predicate !== 'function') {\n\t      throw new TypeError('predicate must be a function');\n\t    }\n\t    var list = Object(this);\n\t    var length = list.length >>> 0;\n\t    var thisArg = arguments[1];\n\t    var value;\n\n\t    for (var i = 0; i < length; i++) {\n\t      value = list[i];\n\t      if (predicate.call(thisArg, value, i, list)) {\n\t        return i;\n\t      }\n\t    }\n\t    return -1;\n\t  };\n\t}\n\t/*eslint-enable */\n\n/***/ }\n/******/ ]);\nangular.module(\"obDateRangePicker\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/directives/calendar/calendar.html\",\"<div class=\\\"input-container\\\" ng-if=\\\"month._showInput()\\\"><label>{{month.Attrs.label}}</label> <input type=\\\"text\\\" ng-model=\\\"month.value\\\" ng-keypress=\\\"month.dateInputEntered($event, month.value)\\\" ng-blur=\\\"month.dateInputSelected($event, month.value)\\\"></div><div class=\\\"header\\\"><span class=\\\"arrow-btn left\\\" ng-if=\\\"month.showLeftArrow()\\\" ng-click=\\\"month.moveToPrev()\\\"></span> <span class=\\\"date\\\">{{month.getFormattedMonth(month.calendar.currentCalendar)}}</span> <span class=\\\"arrow-btn right\\\" ng-if=\\\"month.showRightArrow()\\\" ng-click=\\\"month.moveToNext(1)\\\"></span></div><div class=\\\"board\\\"><div class=\\\"days-of-week\\\"><span class=\\\"day-name\\\" ng-repeat=\\\"day in month.daysName track by $index\\\">{{day}}</span></div><div class=\\\"weeks\\\"><div ng-repeat=\\\"week in month.calendar.monthWeeks track by $index\\\"><span class=\\\"day\\\" ng-repeat=\\\"day in week track by $index\\\" ng-class=\\\"{ \\'selected\\': day.selected, \\'current\\': day.currentDay, \\'other-month\\': !day.currentMonth, \\'in-range\\': day.inRange, \\'range-start\\': day.rangeStart, \\'range-end\\': day.rangeEnd, \\'disabled\\': day.disabled }\\\" ng-click=\\\"month.daySelected(day)\\\">{{day.mo.format(\\'D\\')}}</span></div></div></div>\");\n$templateCache.put(\"app/directives/date-range-picker/date-range-picker.html\",\"<calendar class=\\\"calendar\\\" api=\\\"picker.startCalendarApi\\\" min-day=\\\"picker.minDay()\\\" max-day=\\\"picker.maxDay()\\\" week-start=\\\"picker.weekStart()\\\" month=\\\"picker.startCalendar\\\" interceptors=\\\"picker.startCalendarInterceptors\\\" range-start=\\\"picker.rangeStart\\\" range-end=\\\"picker.rangeEnd\\\" selected-day=\\\"picker.rangeStart\\\" max-month=\\\"picker.endCalendar\\\" week-days-name=\\\"picker.weekDaysName()\\\" month-format=\\\"picker.monthFormat()\\\" input-format=\\\"picker.inputFormat()\\\" label=\\\"Start Date\\\"></calendar><calendar class=\\\"calendar\\\" api=\\\"picker.endCalendarApi\\\" min-day=\\\"picker.minDay()\\\" max-day=\\\"picker.maxDay()\\\" week-start=\\\"picker.weekStart()\\\" month=\\\"picker.endCalendar\\\" interceptors=\\\"picker.endCalendarInterceptors\\\" range-start=\\\"picker.rangeStart\\\" range-end=\\\"picker.rangeEnd\\\" selected-day=\\\"picker.rangeEnd\\\" min-month=\\\"picker.startCalendar\\\" week-days-name=\\\"picker.weekDaysName()\\\" month-format=\\\"picker.monthFormat()\\\" input-format=\\\"picker.inputFormat()\\\" label=\\\"End Date\\\"></calendar>\");\n$templateCache.put(\"app/directives/ob-date-range-picker/ob-date-range-picker.html\",\"<div class=\\\"picker-dropdown-container\\\" ng-class=\\\"{\\'disabled\\': obDateRangePicker.disabled()}\\\"><div class=\\\"picker-dropdown\\\" ng-class=\\\"{\\'open\\': obDateRangePicker.isPickerVisible}\\\" ng-click=\\\"obDateRangePicker.togglePicker()\\\"><span>{{obDateRangePicker.value}}</span></div><div class=\\\"picker\\\" ng-class=\\\"{\\'open\\': obDateRangePicker.isPickerVisible}\\\" ng-show=\\\"obDateRangePicker.isPickerVisible\\\"><div class=\\\"date-range\\\" ng-show=\\\"obDateRangePicker.isCustomVisible\\\"><date-range-picker ng-if=\\\"obDateRangePicker.isPickerVisible\\\" api=\\\"obDateRangePicker.pickerApi\\\" interceptors=\\\"obDateRangePicker.pickerInterceptors\\\" linked-calendars=\\\"obDateRangePicker.linkedCalendars()\\\" week-start=\\\"obDateRangePicker.weekStart()\\\" range=\\\"obDateRangePicker._range\\\" week-days-name=\\\"obDateRangePicker.weekDaysName()\\\" min-day=\\\"obDateRangePicker._getMinDay()\\\" max-day=\\\"obDateRangePicker._getMaxDay()\\\" month-format=\\\"obDateRangePicker.monthFormat()\\\" input-format=\\\"obDateRangePicker.inputFormat()\\\"></date-range-picker></div><div class=\\\"ranges-actions\\\" ng-class=\\\"{\\'custom-open\\': obDateRangePicker.isCustomVisible}\\\"><div class=\\\"ranges\\\"><div class=\\\"range\\\" ng-repeat=\\\"range in obDateRangePicker.preRanges track by $index\\\" ng-class=\\\"{\\'selected\\': obDateRangePicker.selectedRengeIndex === $index, \\'disabled\\': range.disabled}\\\" ng-click=\\\"obDateRangePicker.predefinedRangeSelected(range, $index)\\\" ng-if=\\\"!$last || ($last && !obDateRangePicker.calendarsAlwaysOn())\\\">{{range.name}}</div></div><div class=\\\"actions\\\" ng-if=\\\"!obDateRangePicker.autoApply()\\\"><div class=\\\"drp_btn cancel\\\" ng-click=\\\"obDateRangePicker.discardChanges()\\\">Cancel</div><div class=\\\"drp_btn apply\\\" ng-click=\\\"obDateRangePicker.applyChanges()\\\">APPLY</div></div></div></div></div>\");\n$templateCache.put(\"app/directives/ob-day-picker/ob-day-picker.html\",\"<div ng-form=\\\"{{::dayPicker.formName}}\\\" class=\\\"picker-dropdown-container\\\" ng-class=\\\"{\\'open\\': dayPicker.isPickerVisible, \\'disabled\\': dayPicker.disabled(), \\'invalid\\': !dayPicker.dayValidity}\\\"><input class=\\\"picker-input\\\" ng-model=\\\"dayPicker.value\\\" ng-change=\\\"dayPicker.updateValidity()\\\" ng-keydown=\\\"dayPicker.dateInputEntered($event, dayPicker.value)\\\" ng-click=\\\"dayPicker.showPicker()\\\" ng-disabled=\\\"dayPicker.disabled()\\\"><div class=\\\"picker\\\" ng-show=\\\"dayPicker.isPickerVisible\\\"><calendar class=\\\"calendar\\\" api=\\\"dayPicker.calendarApi\\\" min-day=\\\"dayPicker._getMinDay()\\\" max-day=\\\"dayPicker._getMaxDay()\\\" week-start=\\\"dayPicker.weekStart()\\\" month=\\\"dayPicker._selectedDay\\\" interceptors=\\\"dayPicker.calendarInterceptors\\\" selected-day=\\\"dayPicker._selectedDay\\\" min-month=\\\"dayPicker.startCalendar\\\" week-days-name=\\\"dayPicker.weekDaysName()\\\" month-format=\\\"dayPicker.monthFormat()\\\" show-input=\\\"false\\\"></calendar></div></div>\");}]);"],"file":"scripts/ob-daterangepicker.js","sourceRoot":"/source/"}